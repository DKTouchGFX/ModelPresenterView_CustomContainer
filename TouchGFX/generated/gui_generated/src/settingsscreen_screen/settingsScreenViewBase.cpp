/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/settingsScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

settingsScreenViewBase::settingsScreenViewBase() :
    sliderValueChangedCallback(this, &settingsScreenViewBase::sliderValueChangedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    add(background);

    sliderGreen.setXY(149, 116);
    sliderGreen.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDERGREEN_ID));
    sliderGreen.setupVerticalSlider(9, 12, 0, 0, 300);
    sliderGreen.setValueRange(0, 255);
    sliderGreen.setValue(0);
    sliderGreen.setNewValueCallback(sliderValueChangedCallback);
    add(sliderGreen);

    line1_1.setPosition(156, 116, 11, 315);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(5, 5);
    line1_1.setEnd(5, 310);
    line1_1.setLineWidth(5);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    sliderBlue.setXY(214, 116);
    sliderBlue.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDERBLUE_ID));
    sliderBlue.setupVerticalSlider(9, 12, 0, 0, 300);
    sliderBlue.setValueRange(0, 255);
    sliderBlue.setValue(0);
    sliderBlue.setNewValueCallback(sliderValueChangedCallback);
    add(sliderBlue);

    line1_2.setPosition(221, 116, 11, 315);
    line1_2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    line1_2.setPainter(line1_2Painter);
    line1_2.setStart(5, 5);
    line1_2.setEnd(5, 310);
    line1_2.setLineWidth(5);
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_2);

    sliderRed.setXY(97, 116);
    sliderRed.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDER_INVISIBLE_ID), touchgfx::Bitmap(BITMAP_SLIDERRED_ID));
    sliderRed.setupVerticalSlider(9, 12, 0, 0, 300);
    sliderRed.setValueRange(0, 255);
    sliderRed.setValue(0);
    sliderRed.setNewValueCallback(sliderValueChangedCallback);
    add(sliderRed);

    line1.setPosition(104, 116, 11, 315);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(5, 310);
    line1.setLineWidth(5);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    backButton.setXY(0, 0);
    add(backButton);
}

settingsScreenViewBase::~settingsScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void settingsScreenViewBase::setupScreen()
{
    background.initialize();
    backButton.initialize();
}

void settingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderRed)
    {
        //sliderRedInteraction
        //When sliderRed value changed call virtual function
        //Call sliderRedHandler
        sliderRedHandler(value);
    }
    if (&src == &sliderGreen)
    {
        //silderGreenInteraction
        //When sliderGreen value changed call virtual function
        //Call sliderGreenHandler
        sliderGreenHandler(value);
    }
    if (&src == &sliderBlue)
    {
        //sliderBlueInteraction
        //When sliderBlue value changed call virtual function
        //Call sliderBlueHandler
        sliderBlueHandler(value);
    }
}
