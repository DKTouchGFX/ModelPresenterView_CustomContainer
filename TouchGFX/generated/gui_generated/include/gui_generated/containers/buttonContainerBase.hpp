/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef BUTTONCONTAINERBASE_HPP
#define BUTTONCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class buttonContainerBase : public touchgfx::Container
{
public:
    buttonContainerBase();
    virtual ~buttonContainerBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundColor;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FLEXBUTTON1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton1Buffer[FLEXBUTTON1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<buttonContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // BUTTONCONTAINERBASE_HPP
